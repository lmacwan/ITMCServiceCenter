//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014/02/12 - 15:04:34
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using ITMCServiceCenter.Web.Database;

namespace ITMCServiceCenter.Web.Domain
{

    /// <summary>
    /// Assembler for <see cref="tbl_ProjectDocument"/> and <see cref="tbl_ProjectDocumentDTO"/>.
    /// </summary>
    public static partial class tbl_ProjectDocument_Assembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tbl_ProjectDocumentDTO"/> converted from <see cref="tbl_ProjectDocument"/>.</param>
        static partial void OnDTO(this tbl_ProjectDocument entity, tbl_ProjectDocumentDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tbl_ProjectDocument"/> converted from <see cref="tbl_ProjectDocumentDTO"/>.</param>
        static partial void OnEntity(this tbl_ProjectDocumentDTO dto, tbl_ProjectDocument entity);

        /// <summary>
        /// Converts this instance of <see cref="tbl_ProjectDocumentDTO"/> to an instance of <see cref="tbl_ProjectDocument"/>.
        /// </summary>
        /// <param name="dto"><see cref="tbl_ProjectDocumentDTO"/> to convert.</param>
        public static tbl_ProjectDocument ToEntity(this tbl_ProjectDocumentDTO dto)
        {
            if (dto == null) return null;

            var entity = new tbl_ProjectDocument();

            entity.Id = dto.Id;
            entity.ProjectId = dto.ProjectId;
            entity.Title = dto.Title;
            entity.Description = dto.Description;
            entity.Path = dto.Path;
            entity.CreatedBy = dto.CreatedBy;
            entity.CreatedOn = dto.CreatedOn;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tbl_ProjectDocument"/> to an instance of <see cref="tbl_ProjectDocumentDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tbl_ProjectDocument"/> to convert.</param>
        public static tbl_ProjectDocumentDTO ToDTO(this tbl_ProjectDocument entity)
        {
            if (entity == null) return null;

            var dto = new tbl_ProjectDocumentDTO();

            dto.Id = entity.Id;
            dto.ProjectId = entity.ProjectId;
            dto.Title = entity.Title;
            dto.Description = entity.Description;
            dto.Path = entity.Path;
            dto.CreatedBy = entity.CreatedBy;
            dto.CreatedOn = entity.CreatedOn;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tbl_ProjectDocumentDTO"/> to an instance of <see cref="tbl_ProjectDocument"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tbl_ProjectDocument> ToEntities(this IEnumerable<tbl_ProjectDocumentDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tbl_ProjectDocument"/> to an instance of <see cref="tbl_ProjectDocumentDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tbl_ProjectDocumentDTO> ToDTOs(this IEnumerable<tbl_ProjectDocument> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
