//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014/02/12 - 15:04:35
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using ITMCServiceCenter.Web.Database;

namespace ITMCServiceCenter.Web.Domain
{

    /// <summary>
    /// Assembler for <see cref="tbl_Team"/> and <see cref="tbl_TeamDTO"/>.
    /// </summary>
    public static partial class tbl_Team_Assembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tbl_TeamDTO"/> converted from <see cref="tbl_Team"/>.</param>
        static partial void OnDTO(this tbl_Team entity, tbl_TeamDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tbl_Team"/> converted from <see cref="tbl_TeamDTO"/>.</param>
        static partial void OnEntity(this tbl_TeamDTO dto, tbl_Team entity);

        /// <summary>
        /// Converts this instance of <see cref="tbl_TeamDTO"/> to an instance of <see cref="tbl_Team"/>.
        /// </summary>
        /// <param name="dto"><see cref="tbl_TeamDTO"/> to convert.</param>
        public static tbl_Team ToEntity(this tbl_TeamDTO dto)
        {
            if (dto == null) return null;

            var entity = new tbl_Team();

            entity.Id = dto.Id;
            entity.RelatedTypeId = dto.RelatedTypeId;
            entity.RelatedToId = dto.RelatedToId;
            entity.TypeId = dto.TypeId;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tbl_Team"/> to an instance of <see cref="tbl_TeamDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tbl_Team"/> to convert.</param>
        public static tbl_TeamDTO ToDTO(this tbl_Team entity)
        {
            if (entity == null) return null;

            var dto = new tbl_TeamDTO();

            dto.Id = entity.Id;
            dto.RelatedTypeId = entity.RelatedTypeId;
            dto.RelatedToId = entity.RelatedToId;
            dto.TypeId = entity.TypeId;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tbl_TeamDTO"/> to an instance of <see cref="tbl_Team"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tbl_Team> ToEntities(this IEnumerable<tbl_TeamDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tbl_Team"/> to an instance of <see cref="tbl_TeamDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tbl_TeamDTO> ToDTOs(this IEnumerable<tbl_Team> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
